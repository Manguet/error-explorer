{% extends 'layout/base.html.twig' %}

{% block title %}Nouveau mot de passe - Error Explorer{% endblock %}
{% block description %}Créez un nouveau mot de passe sécurisé pour votre compte Error Explorer.{% endblock %}
{% block keywords %}nouveau mot de passe, réinitialisation, sécurité, error explorer{% endblock %}
{% block robots %}noindex, nofollow{% endblock %}

{% block body_attributes %} class="auth-page reset-password-page"{% endblock %}

{% block body %}
    <!-- Lien de retour -->
    <a href="{{ path('app_login') }}" class="back-link" data-tooltip="Retour à la connexion">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        <span>Retour à la connexion</span>
    </a>

    <!-- Container principal -->
    <div class="auth-container reset-password-container">
        <!-- Header avec branding -->
        <div class="auth-header">
            <div class="hero-badge">
                <div class="badge-dot"></div>
                <span>Nouveau mot de passe</span>
            </div>

            <h1 class="auth-title">Error Explorer</h1>
            <p class="auth-subtitle">Créez un nouveau mot de passe sécurisé</p>
        </div>

        <!-- Formulaire de nouveau mot de passe -->
        <div class="auth-form-container reset-password-form-container">
            <!-- Messages flash -->
            {% for message in app.flashes('error') %}
                <div class="alert alert-error" role="alert">
                    <div class="alert-icon">❌</div>
                    <div class="alert-content">
                        <strong>Erreur</strong>
                        <span>{{ message }}</span>
                    </div>
                </div>
            {% endfor %}

            {% for message in app.flashes('success') %}
                <div class="alert alert-success" role="alert">
                    <div class="alert-icon">✅</div>
                    <div class="alert-content">
                        <strong>Succès</strong>
                        <span>{{ message }}</span>
                    </div>
                </div>
            {% endfor %}

            <!-- Information de sécurité -->
            <div class="security-info">
                <div class="security-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
                        <circle cx="12" cy="16" r="1"/>
                        <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                    </svg>
                </div>
                <div class="security-content">
                    <h3>Nouveau mot de passe</h3>
                    <p>Votre nouveau mot de passe doit être sécurisé et unique. Il sera utilisé pour protéger votre compte Error Explorer.</p>
                </div>
            </div>

            <form method="post" class="auth-form reset-password-form" id="resetPasswordForm" novalidate>
                <!-- Information utilisateur -->
                <div class="user-info">
                    <div class="user-details">
                        <h3>{{ user.fullName }}</h3>
                        <p>{{ user.email }}</p>
                    </div>
                </div>

                <!-- Section : Nouveau mot de passe -->
                <div class="form-section">
                    <h3 class="form-section-title">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
                            <circle cx="12" cy="16" r="1"/>
                            <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                        </svg>
                        Nouveau mot de passe
                    </h3>

                    <div class="form-group">
                        <label for="password" class="form-label">
                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
                                <circle cx="12" cy="16" r="1"/>
                                <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                            </svg>
                            Mot de passe
                        </label>
                        <div class="input-wrapper">
                            <input type="password"
                                   name="password"
                                   id="password"
                                   class="form-input"
                                   placeholder="••••••••••••"
                                   required
                                   minlength="8"
                                   autofocus
                                   autocomplete="new-password">
                            <button type="button" class="password-toggle" aria-label="Afficher/masquer le mot de passe">
                                <svg class="eye-open" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                                    <circle cx="12" cy="12" r="3"/>
                                </svg>
                                <svg class="eye-closed" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="display: none;">
                                    <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"/>
                                    <line x1="1" y1="1" x2="23" y2="23"/>
                                </svg>
                            </button>
                            <div class="input-focus-ring"></div>
                        </div>
                        <div class="password-strength" id="passwordStrength">
                            <div class="strength-bar">
                                <div class="strength-fill"></div>
                            </div>
                            <span class="strength-text">Minimum 8 caractères</span>
                        </div>
                        <div class="form-error" id="passwordError"></div>
                    </div>

                    <div class="form-group">
                        <label for="confirm_password" class="form-label">
                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M9 12l2 2 4-4M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                            </svg>
                            Confirmer le mot de passe
                        </label>
                        <div class="input-wrapper">
                            <input type="password"
                                   name="confirm_password"
                                   id="confirm_password"
                                   class="form-input"
                                   placeholder="••••••••••••"
                                   required
                                   autocomplete="new-password">
                            <div class="password-match-indicator" id="passwordMatch"></div>
                            <div class="input-focus-ring"></div>
                        </div>
                        <div class="form-error" id="confirmPasswordError"></div>
                    </div>
                </div>

                <!-- Critères de sécurité -->
                <div class="password-requirements">
                    <h4>Votre mot de passe doit contenir :</h4>
                    <ul class="requirements-list">
                        <li class="requirement" data-requirement="length">
                            <div class="requirement-icon">
                                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M20 6L9 17l-5-5"/>
                                </svg>
                            </div>
                            <span>Au moins 8 caractères</span>
                        </li>
                        <li class="requirement" data-requirement="uppercase">
                            <div class="requirement-icon">
                                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M20 6L9 17l-5-5"/>
                                </svg>
                            </div>
                            <span>Une lettre majuscule</span>
                        </li>
                        <li class="requirement" data-requirement="lowercase">
                            <div class="requirement-icon">
                                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M20 6L9 17l-5-5"/>
                                </svg>
                            </div>
                            <span>Une lettre minuscule</span>
                        </li>
                        <li class="requirement" data-requirement="number">
                            <div class="requirement-icon">
                                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M20 6L9 17l-5-5"/>
                                </svg>
                            </div>
                            <span>Un chiffre</span>
                        </li>
                    </ul>
                </div>

                <!-- Bouton de soumission -->
                <div class="form-group">
                    <button type="submit" class="btn btn-primary auth-submit-btn" id="submitBtn">
                        <span class="btn-text">Modifier mon mot de passe</span>
                        <div class="btn-loader" style="display: none;">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M21 12a9 9 0 11-6.219-8.56"/>
                            </svg>
                        </div>
                        <svg class="btn-arrow" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M5 12h14M12 5l7 7-7 7"/>
                        </svg>
                    </button>
                </div>
            </form>

            <!-- Footer avec liens -->
            <div class="auth-footer">
                <div class="auth-separator">
                    <span>ou</span>
                </div>

                <div class="auth-login-prompt">
                    <p>Vous vous souvenez de votre mot de passe ?</p>
                    <a href="{{ path('app_login') }}" class="auth-link login-link">
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4M10 17l5-5-5-5M21 12H9"/>
                        </svg>
                        <span>Retour à la connexion</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast notification container -->
    <div id="toast-container" class="toast-container"></div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Script spécifique à la réinitialisation de mot de passe
        class ResetPasswordManager extends AuthManager {
            constructor() {
                super();
                this.confirmPasswordInput = document.getElementById('confirm_password');
                this.requirementElements = document.querySelectorAll('.requirement');
                this.initResetPassword();
            }

            initResetPassword() {
                // Validation mot de passe en temps réel
                if (this.passwordInput) {
                    this.passwordInput.addEventListener('input', () => {
                        this.validatePasswordStrength();
                        this.checkPasswordMatch();
                    });
                }

                // Validation confirmation mot de passe
                if (this.confirmPasswordInput) {
                    this.confirmPasswordInput.addEventListener('input', () => {
                        this.checkPasswordMatch();
                    });
                }
            }

            validatePasswordStrength() {
                const password = this.passwordInput.value;
                const requirements = {
                    length: password.length >= 8,
                    uppercase: /[A-Z]/.test(password),
                    lowercase: /[a-z]/.test(password),
                    number: /\d/.test(password)
                };

                let score = 0;
                let validCount = 0;

                // Mettre à jour les critères visuels
                this.requirementElements.forEach(element => {
                    const requirement = element.dataset.requirement;
                    if (requirements[requirement]) {
                        element.classList.add('valid');
                        validCount++;
                    } else {
                        element.classList.remove('valid');
                    }
                });

                // Calculer le score de force
                score = (validCount / 4) * 100;

                // Mettre à jour la barre de progression
                this.updatePasswordStrengthBar(score, validCount);

                return validCount === 4;
            }

            updatePasswordStrengthBar(score, validCount) {
                const strengthBar = document.querySelector('.strength-fill');
                const strengthText = document.querySelector('.strength-text');

                if (!strengthBar || !strengthText) return;

                strengthBar.style.width = score + '%';

                // Déterminer la couleur et le texte
                let color, text;
                if (validCount === 0) {
                    color = '#e5e7eb';
                    text = 'Entrez un mot de passe';
                } else if (validCount === 1) {
                    color = '#ef4444';
                    text = 'Très faible';
                } else if (validCount === 2) {
                    color = '#f59e0b';
                    text = 'Faible';
                } else if (validCount === 3) {
                    color = '#eab308';
                    text = 'Moyen';
                } else {
                    color = '#10b981';
                    text = 'Fort';
                }

                strengthBar.style.background = color;
                strengthText.textContent = text;
                strengthText.style.color = color;
            }

            checkPasswordMatch() {
                if (!this.confirmPasswordInput || !this.passwordInput) return;

                const password = this.passwordInput.value;
                const confirmPassword = this.confirmPasswordInput.value;
                const matchIndicator = document.getElementById('passwordMatch');

                if (confirmPassword.length === 0) {
                    matchIndicator.className = 'password-match-indicator';
                    return;
                }

                if (password === confirmPassword) {
                    matchIndicator.className = 'password-match-indicator match';
                    matchIndicator.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M9 12l2 2 4-4"/></svg>';
                    this.clearError('confirmPasswordError');
                } else {
                    matchIndicator.className = 'password-match-indicator no-match';
                    matchIndicator.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M18 6L6 18M6 6l12 12"/></svg>';
                    this.showError('confirmPasswordError', 'Les mots de passe ne correspondent pas');
                }
            }

            validateForm() {
                const password = this.passwordInput.value;
                const confirmPassword = this.confirmPasswordInput.value;

                // Valider la force du mot de passe
                if (!this.validatePasswordStrength()) {
                    this.showError('passwordError', 'Le mot de passe ne respecte pas tous les critères de sécurité');
                    return false;
                }

                // Valider la correspondance
                if (password !== confirmPassword) {
                    this.showError('confirmPasswordError', 'Les mots de passe ne correspondent pas');
                    return false;
                }

                this.clearError('passwordError');
                this.clearError('confirmPasswordError');
                return true;
            }

            async handleSubmit(e) {
                if (this.isSubmitting) {
                    e.preventDefault();
                    return;
                }

                // Validation
                if (!this.validateForm()) {
                    e.preventDefault();
                    this.shakeForm();
                    return;
                }

                this.isSubmitting = true;
                this.setLoadingState(true);

                // Animation du bouton
                this.submitBtn.style.transform = 'scale(0.98)';
                setTimeout(() => {
                    this.submitBtn.style.transform = 'scale(1)';
                }, 100);

                // Le formulaire se soumet naturellement
            }
        }

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            const resetPasswordManager = new ResetPasswordManager();

            // CSS pour les animations
            const style = document.createElement('style');
            style.textContent = `
                .user-info {
                    display: flex;
                    align-items: center;
                    gap: 1rem;
                    padding: 1.5rem;
                    background: rgba(59, 130, 246, 0.05);
                    border: 1px solid rgba(59, 130, 246, 0.2);
                    border-radius: 12px;
                    margin-bottom: 2rem;
                }

                .user-avatar .avatar-circle {
                    width: 48px;
                    height: 48px;
                    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
                    color: white;
                    border-radius: 50%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-weight: 700;
                    font-size: 1.1rem;
                }

                .user-details h3 {
                    font-size: 1.1rem;
                    font-weight: 600;
                    color: #1e293b;
                    margin-bottom: 0.25rem;
                }

                .user-details p {
                    font-size: 0.9rem;
                    color: #64748b;
                    margin: 0;
                }

                .password-requirements {
                    margin: 2rem 0;
                    padding: 1.5rem;
                    background: rgba(255, 255, 255, 0.03);
                    border-radius: 12px;
                    border: 1px solid rgba(255, 255, 255, 0.1);
                }

                .password-requirements h4 {
                    font-size: 1rem;
                    font-weight: 600;
                    color: #e2e8f0;
                    margin-bottom: 1rem;
                }

                .requirements-list {
                    list-style: none;
                    padding: 0;
                    display: grid;
                    grid-template-columns: repeat(2, 1fr);
                    gap: 0.75rem;
                }

                @media (max-width: 640px) {
                    .requirements-list {
                        grid-template-columns: 1fr;
                    }
                }

                .requirement {
                    display: flex;
                    align-items: center;
                    gap: 0.5rem;
                    padding: 0.5rem;
                    border-radius: 8px;
                    transition: all 0.3s ease;
                    background: rgba(255, 255, 255, 0.02);
                    border: 1px solid rgba(255, 255, 255, 0.05);
                }

                .requirement.valid {
                    background: rgba(16, 185, 129, 0.1);
                    border-color: rgba(16, 185, 129, 0.3);
                    color: #10b981;
                }

                .requirement.valid .requirement-icon {
                    color: #10b981;
                }

                .requirement-icon {
                    width: 16px;
                    height: 16px;
                    color: #6b7280;
                    transition: all 0.3s ease;
                }

                .requirement span {
                    font-size: 0.875rem;
                    color: #94a3b8;
                    transition: all 0.3s ease;
                }

                .requirement.valid span {
                    color: #10b981;
                }

                .password-match-indicator {
                    position: absolute;
                    right: 3rem;
                    top: 50%;
                    transform: translateY(-50%);
                    width: 20px;
                    height: 20px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    opacity: 0;
                    transition: all 0.3s ease;
                }

                .password-match-indicator.match {
                    opacity: 1;
                    color: #10b981;
                }

                .password-match-indicator.no-match {
                    opacity: 1;
                    color: #ef4444;
                }

                .password-strength {
                    margin-top: 0.75rem;
                }

                .strength-bar {
                    width: 100%;
                    height: 4px;
                    background: #f3f4f6;
                    border-radius: 2px;
                    overflow: hidden;
                    margin-bottom: 0.5rem;
                }

                .strength-fill {
                    height: 100%;
                    width: 0%;
                    background: #e5e7eb;
                    border-radius: 2px;
                    transition: all 0.3s ease;
                }

                .strength-text {
                    font-size: 0.8rem;
                    color: #6b7280;
                    font-weight: 500;
                    transition: all 0.3s ease;
                }

                .security-info {
                    display: flex;
                    gap: 1rem;
                    padding: 1.5rem;
                    background: rgba(59, 130, 246, 0.05);
                    border: 1px solid rgba(59, 130, 246, 0.2);
                    border-radius: 12px;
                    margin-bottom: 2rem;
                }

                .security-icon {
                    color: #3b82f6;
                    flex-shrink: 0;
                }

                .security-content h3 {
                    font-size: 1rem;
                    font-weight: 600;
                    color: #1e293b;
                    margin-bottom: 0.5rem;
                }

                .security-content p {
                    font-size: 0.9rem;
                    color: #64748b;
                    margin: 0;
                }
            `;
            document.head.appendChild(style);
        });
    </script>
{% endblock %}
