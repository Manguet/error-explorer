{% extends 'dashboard/base.html.twig' %}

{% block title %}Projet {{ project }} - Error Explorer{% endblock %}

{% block page_title %}Projet : {{ project }}{% endblock %}
{% block page_subtitle %}Monitoring et erreurs spécifiques à ce projet{% endblock %}

{% block breadcrumb_items %}
    <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
    </svg>
    <a href="{{ path('projects_index') }}">Projets</a>
    <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
    </svg>
    <span>{{ project }}</span>
{% endblock %}

{% block header_actions %}
    <a href="{{ path('projects_index') }}" class="header-btn btn-secondary">
        <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
        </svg>
        Tous les projets
    </a>
    <button class="header-btn btn-secondary" onclick="window.location.reload()">
        <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
        </svg>
        Actualiser
    </button>
    <label class="header-btn btn-secondary" style="background: none; border: 1px solid #e2e8f0; cursor: pointer;">
        <input type="checkbox" id="auto-refresh-toggle" checked style="margin-right: 0.5rem;">
        Auto-refresh
    </label>
{% endblock %}

{% block body %}
<!-- Stats Cards -->
<div class="dashboard-section">
    <div class="dashboard-stats-grid">
        <div class="dashboard-stat-card stat-danger">
            <div class="dashboard-stat-card-header">
                <div class="dashboard-stat-card-title">Erreurs du Projet</div>
                <div class="dashboard-stat-card-icon">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5C3.312 18.333 4.274 20 5.814 20z"/>
                    </svg>
                </div>
            </div>
            <div class="dashboard-stat-card-value">{{ stats.total_errors }}</div>
            <div class="dashboard-stat-card-label">{{ stats.open_errors }} ouvertes</div>
            <div class="dashboard-stat-card-trend trend-{% if stats.open_errors > (stats.total_errors * 0.7) %}up{% else %}down{% endif %}">
                <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="{% if stats.open_errors > (stats.total_errors * 0.7) %}M13 17h8m0 0V9m0 8l-8-8-4 4-6-6{% else %}M13 7h8m0 0v8m0-8l-8 8-4-4-6 6{% endif %}"/>
                </svg>
                Pour ce projet
            </div>
        </div>

        <div class="dashboard-stat-card stat-warning">
            <div class="dashboard-stat-card-header">
                <div class="dashboard-stat-card-title">Occurrences</div>
                <div class="dashboard-stat-card-icon">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                    </svg>
                </div>
            </div>
            <div class="dashboard-stat-card-value">{{ stats.total_occurrences|number_format }}</div>
            <div class="dashboard-stat-card-label">{{ stats.occurrences_today }} aujourd'hui</div>
            <div class="dashboard-stat-card-trend trend-stable">
                <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                </svg>
                Activité normale
            </div>
        </div>

        <div class="dashboard-stat-card stat-success">
            <div class="dashboard-stat-card-header">
                <div class="dashboard-stat-card-title">Résolues</div>
                <div class="dashboard-stat-card-icon">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                </div>
            </div>
            <div class="dashboard-stat-card-value">{{ stats.resolved_errors }}</div>
            <div class="dashboard-stat-card-label">
                {% if stats.total_errors > 0 %}
                    {{ ((stats.resolved_errors / stats.total_errors) * 100)|round }}% du total
                {% else %}
                    Aucune erreur
                {% endif %}
            </div>
            <div class="dashboard-stat-card-trend trend-up">
                <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                </svg>
                Excellent travail !
            </div>
        </div>

        <div class="dashboard-stat-card stat-info">
            <div class="dashboard-stat-card-header">
                <div class="dashboard-stat-card-title">Cette Semaine</div>
                <div class="dashboard-stat-card-icon">
                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                    </svg>
                </div>
            </div>
            <div class="dashboard-stat-card-value">{{ stats.occurrences_this_week|number_format }}</div>
            <div class="dashboard-stat-card-label">occurrences</div>
            <div class="dashboard-stat-card-trend trend-stable">
                <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                </svg>
                7 derniers jours
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="dashboard-section">
    <div class="dashboard-filters">
        <form method="GET" class="dashboard-filters-grid">
            <input type="hidden" name="project" value="{{ project }}">

            <div class="dashboard-filters-group">
                <label>Statut</label>
                <select name="status">
                    <option value="">Tous les statuts</option>
                    <option value="open" {{ (filters.status ?? '') == 'open' ? 'selected' : '' }}>Ouvertes</option>
                    <option value="resolved" {{ (filters.status ?? '') == 'resolved' ? 'selected' : '' }}>Résolues</option>
                    <option value="ignored" {{ (filters.status ?? '') == 'ignored' ? 'selected' : '' }}>Ignorées</option>
                </select>
            </div>

            <div class="dashboard-filters-group">
                <label>Code HTTP</label>
                <select name="http_status">
                    <option value="">Tous les codes</option>
                    <option value="403" {{ (filters.http_status ?? '') == 403 ? 'selected' : '' }}>403 - Forbidden</option>
                    <option value="404" {{ (filters.http_status ?? '') == 404 ? 'selected' : '' }}>404 - Not Found</option>
                    <option value="500" {{ (filters.http_status ?? '') == 500 ? 'selected' : '' }}>500 - Server Error</option>
                    <option value="502" {{ (filters.http_status ?? '') == 502 ? 'selected' : '' }}>502 - Bad Gateway</option>
                    <option value="503" {{ (filters.http_status ?? '') == 503 ? 'selected' : '' }}>503 - Service Unavailable</option>
                </select>
            </div>

            <div class="dashboard-filters-group">
                <label>Type d'erreur</label>
                <select name="error_type">
                    <option value="">Tous les types</option>
                    <option value="exception" {{ (filters.error_type ?? '') == 'exception' ? 'selected' : '' }}>Exception</option>
                    <option value="error" {{ (filters.error_type ?? '') == 'error' ? 'selected' : '' }}>Error</option>
                    <option value="warning" {{ (filters.error_type ?? '') == 'warning' ? 'selected' : '' }}>Warning</option>
                    <option value="notice" {{ (filters.error_type ?? '') == 'notice' ? 'selected' : '' }}>Notice</option>
                </select>
            </div>

            <div class="dashboard-filters-group">
                <label>Environnement</label>
                <select name="environment">
                    <option value="">Tous les environnements</option>
                    <option value="prod" {{ (filters.environment ?? '') == 'prod' ? 'selected' : '' }}>Production</option>
                    <option value="staging" {{ (filters.environment ?? '') == 'staging' ? 'selected' : '' }}>Staging</option>
                    <option value="dev" {{ (filters.environment ?? '') == 'dev' ? 'selected' : '' }}>Development</option>
                    <option value="test" {{ (filters.environment ?? '') == 'test' ? 'selected' : '' }}>Test</option>
                </select>
            </div>

            <div class="dashboard-filters-group">
                <label>Période</label>
                <select name="days">
                    <option value="1" {{ app.request.get('days', 7) == 1 ? 'selected' : '' }}>Dernières 24h</option>
                    <option value="7" {{ app.request.get('days', 7) == 7 ? 'selected' : '' }}>7 derniers jours</option>
                    <option value="30" {{ app.request.get('days', 7) == 30 ? 'selected' : '' }}>30 derniers jours</option>
                    <option value="90" {{ app.request.get('days', 7) == 90 ? 'selected' : '' }}>90 derniers jours</option>
                </select>
            </div>

            <div class="dashboard-filters-group">
                <label>Recherche</label>
                <input type="text" name="search" value="{{ filters.search ?? '' }}" placeholder="Message, classe, fichier...">
            </div>

            <div class="dashboard-filters-actions">
                <button type="submit" class="filter-btn">
                    <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z"/>
                    </svg>
                    Filtrer
                </button>
                <a href="{{ path('dashboard_project', { project: project }) }}" class="filter-btn btn-secondary">
                    <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                    </svg>
                    Reset
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Errors Table -->
<div class="dashboard-section">
    <div class="dashboard-table-container">
        <div class="dashboard-table-container-header">
            <h3>
                🚨 Erreurs du projet {{ project }}
                <span style="color: #64748b; font-weight: 400; font-size: 0.875rem; margin-left: 0.5rem;">
                        ({{ pagination.total_items }} au total)
                    </span>
            </h3>
            <div class="table-actions">
                <label style="display: flex; align-items: center; gap: 0.5rem; font-size: 0.875rem; color: #64748b;">
                    Trier par:
                    <select id="sort-select" class="sort-select">
                        <option value="lastSeen|DESC" {{ sort == 'lastSeen' and direction == 'DESC' ? 'selected' : '' }}>Plus récentes</option>
                        <option value="occurrenceCount|DESC" {{ sort == 'occurrenceCount' and direction == 'DESC' ? 'selected' : '' }}>Plus fréquentes</option>
                        <option value="firstSeen|ASC" {{ sort == 'firstSeen' and direction == 'ASC' ? 'selected' : '' }}>Plus anciennes</option>
                        <option value="message|ASC" {{ sort == 'message' and direction == 'ASC' ? 'selected' : '' }}>Message A-Z</option>
                    </select>
                </label>
            </div>
        </div>

        {% if error_groups|length > 0 %}
        <table class="dashboard-table">
            <thead>
            <tr>
                <th>Erreur</th>
                <th>Type</th>
                <th>Statut</th>
                <th>Occurrences</th>
                <th>Dernière vue</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {% for error in error_groups %}
                <tr data-error-id="{{ error.id }}">
                    <td>
                        <div class="table-cell-title">
                            <a href="{{ path('dashboard_error_detail', { id: error.id }) }}">
                                {{ error.title }}
                            </a>
                        </div>
                        <div class="table-cell-subtitle">
                            {{ error.message|length > 100 ? error.message|slice(0, 100) ~ '...' : error.message }}
                        </div>
                        <div class="table-cell-meta">
                            {% if error.httpStatusCode %}
                                <span class="status-badge badge-warning">HTTP {{ error.httpStatusCode }}</span>
                            {% endif %}
                            {% if error.environment %}
                                <span class="status-badge badge-ignored">{{ error.environment }}</span>
                            {% endif %}
                        </div>
                    </td>
                    <td>
                                    <span class="status-badge badge-{{ error.errorType }}">
                                        {{ error.errorType|title }}
                                    </span>
                    </td>
                    <td>
                                    <span class="status-badge badge-{{ error.status }}">
                                        {{ error.status|title }}
                                    </span>
                    </td>
                    <td>
                        <div class="table-cell-title">{{ error.occurrenceCount }}</div>
                        <div class="table-cell-meta">
                            Depuis {{ error.firstSeen|date('d/m/Y') }}
                        </div>
                    </td>
                    <td>
                        <div class="table-cell-title">{{ error.lastSeen|date('d/m H:i') }}</div>
                        <div class="table-cell-meta">{{ error.lastSeen|date('d/m/Y') }}</div>
                    </td>
                    <td>
                        <div class="table-actions">
                            {% if error.status == 'open' %}
                                <button class="action-btn btn-success" onclick="resolveError({{ error.id }})" title="Résoudre">
                                    ✓
                                </button>
                                <button class="action-btn btn-danger" onclick="ignoreError({{ error.id }})" title="Ignorer">
                                    ✕
                                </button>
                            {% elseif error.status == 'resolved' %}
                                <button class="action-btn btn-warning" onclick="reopenError({{ error.id }})" title="Rouvrir">
                                    ↻
                                </button>
                            {% elseif error.status == 'ignored' %}
                                <button class="action-btn btn-warning" onclick="reopenError({{ error.id }})" title="Rouvrir">
                                    ↻
                                </button>
                            {% endif %}
                        </div>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
        {% else %}
        <div class="dashboard-empty-state">
            <div class="empty-icon">🎉</div>
            <h3>Aucune erreur trouvée pour ce projet</h3>
            {% if filters|length > 1 %}
                        <p>Aucune erreur ne correspond à vos critères de recherche pour ce projet.</p>
                        <a href="{{ path('dashboard_project', { project: project }) }}" class="empty-action">
                            Voir toutes les erreurs du projet
                        </a>
                    {% else %}
                        <p>Félicitations ! Ce projet ne présente aucune erreur. Continuez ainsi !</p>
                        <a href="{{ path('projects_show', { id: project_entity.id }) }}" class="empty-action">
                            Configurer le projet
                        </a>
                    {% endif %}
                </div>
            {% endif %}

            {% if pagination.total_pages > 1 %}
                <div class="dashboard-pagination">
                    {% if pagination.current_page > 1 %}
                        <a href="{{ path('dashboard_project', { project: project }|merge(app.request.query.all)|merge({ page: pagination.current_page - 1 })) }}">
                            ← Précédent
                        </a>
                    {% endif %}

                    {% for page in range(max(1, pagination.current_page - 2), min(pagination.total_pages, pagination.current_page + 2)) %}
                        {% if page == pagination.current_page %}
                            <span class="current">{{ page }}</span>
                        {% else %}
                            <a href="{{ path('dashboard_project', { project: project }|merge(app.request.query.all)|merge({ page: page })) }}">
                                {{ page }}
                            </a>
                        {% endif %}
                    {% endfor %}

                    {% if pagination.current_page < pagination.total_pages %}
                        <a href="{{ path('dashboard_project', { project: project }|merge(app.request.query.all)|merge({ page: pagination.current_page + 1 })) }}">
                            Suivant →
                        </a>
                    {% endif %}
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestion du tri
            const sortSelect = document.getElementById('sort-select');
            if (sortSelect) {
                sortSelect.addEventListener('change', function() {
                    const [sort, direction] = this.value.split('|');
                    const url = new URL(window.location);
                    url.searchParams.set('sort', sort);
                    url.searchParams.set('direction', direction);
                    url.searchParams.delete('page');
                    window.location.href = url.toString();
                });
            }

            // Actions sur les erreurs (même code que dashboard index)
            window.resolveError = async function(errorId) {
                const result = await performAction(`{{ path('dashboard_error_resolve', { id: '__ID__' }) }}`.replace('__ID__', errorId));
                if (result) {
                    updateErrorStatus(errorId, 'resolved');
                }
            };

            window.ignoreError = async function(errorId) {
                const result = await performAction(`{{ path('dashboard_error_ignore', { id: '__ID__' }) }}`.replace('__ID__', errorId));
                if (result) {
                    updateErrorStatus(errorId, 'ignored');
                }
            };

            window.reopenError = async function(errorId) {
                const result = await performAction(`{{ path('dashboard_error_reopen', { id: '__ID__' }) }}`.replace('__ID__', errorId));
                if (result) {
                    updateErrorStatus(errorId, 'open');
                }
            };

            function updateErrorStatus(errorId, newStatus) {
                const row = document.querySelector(`tr[data-error-id="${errorId}"]`);
                if (row) {
                    const statusBadge = row.querySelector('.badge-open, .badge-resolved, .badge-ignored');
                    if (statusBadge) {
                        statusBadge.className = `status-badge badge-${newStatus}`;
                        statusBadge.textContent = newStatus.charAt(0).toUpperCase() + newStatus.slice(1);
                    }

                    const actionsCell = row.querySelector('.table-actions');
                    if (actionsCell) {
                        let buttonsHtml = '';
                        if (newStatus === 'open') {
                            buttonsHtml = `
                                <button class="action-btn btn-success" onclick="resolveError(${errorId})" title="Résoudre">✓</button>
                                <button class="action-btn btn-danger" onclick="ignoreError(${errorId})" title="Ignorer">✕</button>
                            `;
                        } else {
                            buttonsHtml = `
                                <button class="action-btn btn-warning" onclick="reopenError(${errorId})" title="Rouvrir">↻</button>
                            `;
                        }
                        actionsCell.innerHTML = buttonsHtml;
                    }

                    row.style.background = '#dcfce7';
                    setTimeout(() => {
                        row.style.background = '';
                    }, 1000);
                }
            }

            // Auto-refresh
            const autoRefreshToggle = document.getElementById('auto-refresh-toggle');
            let autoRefreshInterval;

            if (autoRefreshToggle) {
                autoRefreshToggle.addEventListener('change', function() {
                    if (this.checked) {
                        startAutoRefresh();
                    } else {
                        stopAutoRefresh();
                    }
                });

                if (autoRefreshToggle.checked) {
                    startAutoRefresh();
                }
            }

            function startAutoRefresh() {
                autoRefreshInterval = setInterval(async () => {
                    try {
                        const response = await fetch('{{ path('dashboard_api_stats') }}?' + new URLSearchParams({{ filters|json_encode|raw }}));
                        const stats = await response.json();
                        updateStatsDisplay(stats);
                    } catch (error) {
                        console.error('Erreur lors du refresh des stats:', error);
                    }
                }, 30000);
            }

            function stopAutoRefresh() {
                if (autoRefreshInterval) {
                    clearInterval(autoRefreshInterval);
                }
            }

            function updateStatsDisplay(stats) {
                const statCards = document.querySelectorAll('.dashboard-stat-card-value');
                if (statCards.length >= 4) {
                    statCards[0].textContent = stats.total_errors || '0';
                    statCards[1].textContent = (stats.total_occurrences || 0).toLocaleString();
                    statCards[2].textContent = stats.resolved_errors || '0';
                    statCards[3].textContent = (stats.occurrences_this_week || 0).toLocaleString();
                }

                statCards.forEach(card => {
                    card.style.transform = 'scale(1.05)';
                    setTimeout(() => {
                        card.style.transform = '';
                    }, 200);
                });
            }
        });
    </script>
{% endblock %}
