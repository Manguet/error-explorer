security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Webhook endpoints - pas d'authentification
        webhook:
            pattern: ^/webhook
            security: false

        # API publique - pas d'authentification
        api_public:
            pattern: ^/api/(health|ping)
            security: false

        # Pages publiques - pas d'authentification
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: dashboard_index
            logout:
                path: app_logout
                target: home

            # Remember me
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

    # Easy way to control access for large sections of your site
    access_control:
        # Pages publiques accessibles à tous
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/resend-verification, roles: PUBLIC_ACCESS }
        - { path: ^/api/validate-email, roles: PUBLIC_ACCESS }
        - { path: ^/pricing, roles: PUBLIC_ACCESS }
        - { path: ^/features, roles: PUBLIC_ACCESS }
        - { path: ^/about, roles: PUBLIC_ACCESS }
        - { path: ^/contact, roles: PUBLIC_ACCESS }
        - { path: ^/demo, roles: PUBLIC_ACCESS }
        - { path: ^/terms, roles: PUBLIC_ACCESS }
        - { path: ^/privacy, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: PUBLIC_ACCESS }

        # Webhooks publics (avec validation de token dans le contrôleur)
        - { path: ^/webhook, roles: PUBLIC_ACCESS }

        # API publique
        - { path: ^/api/health, roles: PUBLIC_ACCESS }
        - { path: ^/api/ping, roles: PUBLIC_ACCESS }

        # Dashboard et projets - nécessite une connexion
        - { path: ^/dashboard, roles: ROLE_USER }
        - { path: ^/projects, roles: ROLE_USER }
        - { path: ^/profile, roles: ROLE_USER }

        # Administration - nécessite le rôle admin
        - { path: ^/admin, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
